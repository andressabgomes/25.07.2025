version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: customer_support_db
    environment:
      POSTGRES_DB: customer_support
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - customer_support_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: customer_support_backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/customer_support
      SECRET_KEY: your-secret-key-here-change-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - customer_support_network
    volumes:
      - ./backend:/app
    command: ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: customer_support_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - customer_support_network

volumes:
  postgres_data:

networks:
  customer_support_network:
    driver: bridge